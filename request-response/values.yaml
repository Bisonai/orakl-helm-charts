## Klaytn Orakl Listener Configuration
## created by Bisonai

global:
  appName: orakl-request-response
  image:
    repository: public.ecr.aws/bisonai/orakl-core #repository url
    pullPolicy: IfNotPresent
    tag: "v0.3.1.20230701.0153.be36831"                    #image tag
    imagePullPolicy: IfNotPresent
    # -- If defined, uses a Secret to pull an image from a private Docker registry or repository
    imagePullSecrets: []

  config:
    NODE_ENV: 
    ORAKL_NETWORK_API_URL: 
    CHAIN: 
    HEALTH_CHECK_PORT: 8080
    REDIS_HOST: 
    REDIS_PORT: 
    SLACK_WEBHOOK_URL:
    LOG_LEVEL: debug
    LOG_DIR: /app/log
    PROVIDER_URL: 

  secretManager:
    enabled: false
    secretId: 
    versionId: 

  gcpAutopilot:
    enabled: true

  affinity:
    enabled: false
    key: kubernetes.io/hostname
    value: ip-10-0-90-13.ap-southeast-1.compute.internal

  hostPath: 
    enable: false
    volumes:
      - name: orakl-log-storage
        hostPath:
          path: /log/
          type: DirectoryOrCreate

  volumes:
    - name: orakl-log-storage
      persistentVolumeClaim:
        claimName: orakl-log

  volumeMounts:
    - name: orakl-log-storage
      mountPath: /app/log

  podAnnotations: {}

  livenessProbe:
    enabled: true
    path: /
    initialDelaySeconds: 20
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5

  readinessProbe:
    enabled: true
    path: /
    initialDelaySeconds: 20
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5 

listener:
  enabled: true
  replicas: 1
  serviceAccount:
    # -- Create a service account for the application controller
    create: true
    # -- Service account name
    name: orakl-request-response-listener
    # -- Annotations applied to created service account
    annotations: {}
    # -- Automount API credentials for the Service Account
    automountServiceAccountToken: true

  APP_PORT : 4000

  podSecurityContext: {}

  containerSecurityContext: {}
    
  resources:
    # limits:
    #   cpu: 1500m
    #   memory: 4Gi
    # requests:
    #   cpu: 1500m
    #   memory: 4Gi

worker:
  enabled: true
  replicas: 1
  serviceAccount:
    # -- Create a service account for the application controller
    create: true
    # -- Service account name
    name: orakl-request-response-worker
    # -- Annotations applied to created service account
    annotations: {}
    # -- Automount API credentials for the Service Account
    automountServiceAccountToken: true

  APP_PORT : 5000

  podSecurityContext: {}

  containerSecurityContext: {}
    
  resources:
    # limits:
    #   cpu: 1500m
    #   memory: 4Gi
    # requests:
    #   cpu: 1500m
    #   memory: 4Gi

reporter:
  enabled: true
  replicas: 1
  serviceAccount:
    # -- Create a service account for the application controller
    create: true
    # -- Service account name
    name: orakl-request-response-reporter
    # -- Annotations applied to created service account
    annotations: {}
    # -- Automount API credentials for the Service Account
    automountServiceAccountToken: true

  APP_PORT : 6000

  podSecurityContext: {}

  containerSecurityContext: {}
    
  resources:
    # limits:
    #   cpu: 1500m
    #   memory: 4Gi
    # requests:
    #   cpu: 1500m
    #   memory: 4Gi

nodeSelector: {}
tolerations: []
dotenv: {}
