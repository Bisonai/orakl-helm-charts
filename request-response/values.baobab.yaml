## Klaytn Orakl Listener Configuration
## created by Bisonai

global:
  name: orakl-request-response
  namespace: orakl

  appName: orakl-request-response
  image:
    repository: public.ecr.aws/bisonai/orakl-core #repository url
    pullPolicy: IfNotPresent
    listenerTag: "v0.5.1.20240223.0352.eec1c2d"
    reporterTag: "v0.5.1.20240223.0352.eec1c2d"
    workerTag: "v0.5.1.20240403.0423.f813b61"
    tag: "v0.5.1.20240223.0352.eec1c2d"
    imagePullPolicy: IfNotPresent
    # -- If defined, uses a Secret to pull an image from a private Docker registry or repository
    imagePullSecrets: []

  env:
    - name: NODE_ENV
      value: production
    - name: ORAKL_NETWORK_API_URL
      value: http://orakl-api.orakl.svc.cluster.local:3030/api/v1
    - name: CHAIN
      value: baobab
    - name: LOG_LEVEL
      value: debug
    - name: REDIS_HOST
      value: redis-request-response-master.redis.svc.cluster.local
    - name: REDIS_PORT
      value: "6379"
    - name: PROVIDER_URL
      value: http://172.0.100.240:8551

  secretManager:
    enabled: false
    secretId:
    versionId:

  gcpAutopilot:
    enabled: false

  affinity:
    enabled: false
    key: kubernetes.io/hostname
    value: ip-10-0-90-13.ap-southeast-1.compute.internal

  podAnnotations: {}

  livenessProbe:
    enabled: true
    path: /
    initialDelaySeconds: 20
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5

  readinessProbe:
    enabled: true
    path: /
    initialDelaySeconds: 20
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5

listener:
  enabled: true
  replicas: 1
  serviceAccount:
    # -- Create a service account for the application controller
    create: true
    # -- Service account name
    name: orakl-request-response-listener
    # -- Annotations applied to created service account
    annotations: {}
    # -- Automount API credentials for the Service Account
    automountServiceAccountToken: true

  APP_PORT: 4000

  podSecurityContext: {}

  containerSecurityContext: {}

  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 1000m
      memory: 2Gi

worker:
  enabled: true
  replicas: 1
  serviceAccount:
    # -- Create a service account for the application controller
    create: true
    # -- Service account name
    name: orakl-request-response-worker
    # -- Annotations applied to created service account
    annotations: {}
    # -- Automount API credentials for the Service Account
    automountServiceAccountToken: true

  APP_PORT: 5000

  podSecurityContext: {}

  containerSecurityContext: {}

  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 1000m
      memory: 2Gi

reporter:
  enabled: true
  replicas: 1
  serviceAccount:
    # -- Create a service account for the application controller
    create: true
    # -- Service account name
    name: orakl-request-response-reporter
    # -- Annotations applied to created service account
    annotations: {}
    # -- Automount API credentials for the Service Account
    automountServiceAccountToken: true

  APP_PORT: 6000

  podSecurityContext: {}

  containerSecurityContext: {}

  resources:
    limits:
      cpu: 500m
      memory: 800Mi
    requests:
      cpu: 500m
      memory: 800Mi

nodeSelector: {}
tolerations: []
dotenv: {}
