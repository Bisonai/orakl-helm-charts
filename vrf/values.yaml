## Klaytn Orakl Listener Configuration
## created by Bisonai

global:
  image:
    repository: docker.io/jolol/orakl #repository url
    pullPolicy: IfNotPresent
    tag: "v.0.0.6"                    #image tag
    imagePullPolicy: IfNotPresent
    # -- If defined, uses a Secret to pull an image from a private Docker registry or repository
    imagePullSecrets: []

  config:
    NODE_ENV: production    #[dev, production]
    CHAIN: baobab           #[baobab, cypress]
    HEALTH_CHECK_PORT: 8888 #Specify Helath Check Port
    ORAKL_DIR: /app/db      #The path should match with PVC of Orakl database
    REDIS_HOST: redis-master-0.redis-headless.orakl.svc.cluster.local #Redis Host Url
    REDIS_PORT: 6379        #Redis Port
    SLACK_WEBHOOK_URL:      #Error message is delivered to slack 
    LOG_LEVEL: debug        #[info, debug]
    LOG_DIR: /app/log       #The path should match with PVC of Orakl Log

  volumes:
    - name: orakl-database-storage
      persistentVolumeClaim:
        claimName: orakl-database
    - name: orakl-log-storage
      persistentVolumeClaim:
        claimName: orakl-log

  volumeMounts:
    - name: orakl-database-storage
      mountPath: /app/db      
      subPath: db
    - name: orakl-log-storage
      mountPath: /app/log

  podAnnotations: {}

  livenessProbe:
    enabled: true
    path: /
    initialDelaySeconds: 20
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5

  readinessProbe:
    enabled: true
    path: /
    initialDelaySeconds: 20
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5 

listener:
  enabled: true
  replicas: 1
  serviceAccount:
    # -- Create a service account for the application controller
    create: true
    # -- Service account name
    name: orakl-vrf-listener
    # -- Annotations applied to created service account
    annotations: {}
    # -- Automount API credentials for the Service Account
    automountServiceAccountToken: true

  podSecurityContext: {}

  containerSecurityContext: {}
    
  resources:
    # limits:
    #   cpu: 500m
    #   memory: 4Gi
    # requests:
    #   cpu: 500m
    #   memory: 4Gi

worker:
  enabled: true
  replicas: 1
  serviceAccount:
    # -- Create a service account for the application controller
    create: true
    # -- Service account name
    name: orakl-vrf-worker
    # -- Annotations applied to created service account
    annotations: {}
    # -- Automount API credentials for the Service Account
    automountServiceAccountToken: true

  podSecurityContext: {}

  containerSecurityContext: {}
    
  resources:
    # limits:
    #   cpu: 500m
    #   memory: 4Gi
    # requests:
    #   cpu: 500m
    #   memory: 4Gi

reporter:
  enabled: true
  replicas: 1
  serviceAccount:
    # -- Create a service account for the application controller
    create: true
    # -- Service account name
    name: orakl-vrf-reporter
    # -- Annotations applied to created service account
    annotations: {}
    # -- Automount API credentials for the Service Account
    automountServiceAccountToken: true

  podSecurityContext: {}

  containerSecurityContext: {}
    
  resources:
    # limits:
    #   cpu: 500m
    #   memory: 4Gi
    # requests:
    #   cpu: 500m
    #   memory: 4Gi

nodeSelector: {}
tolerations: []
dotenv: {}
