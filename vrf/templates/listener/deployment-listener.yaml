apiVersion: apps/v1
kind: Deployment
metadata:
  name: listener
  labels:
    {{- include "orakl-vrf.labels.listener" . | nindent 4 }}
spec:
  replicas: {{ .Values.listener.replicas }}
  selector:
    matchLabels:
      {{- include "orakl-vrf.selectorLabels.listener" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.global.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "orakl-vrf.selectorLabels.listener" . | nindent 8 }}
    spec:
      {{- with .Values.global.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.listener.serviceAccount.name }}
      securityContext:
        {{- toYaml .Values.listener.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.listener.containerSecurityContext | nindent 12 }}
          image: "{{ .Values.global.image.repository }}:{{ .Values.global.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          env:
            - name: NODE_ENV
              value: {{ .Values.global.NODE_ENV | quote}}                          
            - name: CHAIN
              value: {{ .Values.global.CHAIN | quote}}                          
            - name: HOST_SETTINGS_DB_DIR
              value: {{ .Values.global.HOST_SETTINGS_DB_DIR | quote}}              
            - name: HEALTH_CHECK_PORT
              value: {{ .Values.global.healthCheckPort | quote}}  
            - name: ORAKL_DIR
              value: {{ .Values.global.ORAKL_DIR | quote}}  
            - name: SLACK_WEBHOOK_URL
              value: {{ .Values.global.SLACK_WEBHOOK_URL | quote}}                                                                                 
          command: ["yarn"]
          args: [start:listener:vrf]
          {{- if .Values.global.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.global.livenessProbe.path }}
              port: {{ .Values.global.healthCheckPort }} 
            initialDelaySeconds: {{ .Values.global.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.global.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.global.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.global.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.global.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.global.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.global.readinessProbe.path }}
              port: {{ .Values.global.healthCheckPort }} 
            initialDelaySeconds: {{ .Values.global.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.global.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.global.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.global.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.global.readinessProbe.failureThreshold }}              
          {{- end }}          

          resources:
            {{- toYaml .Values.listener.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
