## Klaytn Orakl Listener Configuration
## created by Bisonai

global:
  name: orakl-aggregator
  namespace: orakl
  appName: orakl-aggregator
  image:
    repository: public.ecr.aws/u6t6w0e4/orakl-core #repository url
    pullPolicy: IfNotPresent
    listenerTag: "v0.5.1.20240223.0352.eec1c2d"
    reporterTag: "v0.5.1.20240223.0352.eec1c2d"
    workerTag: "v0.5.1.20240223.0352.eec1c2d"
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []

  secretManager:
    enabled: false
    secretId:
    versionId:

  env:
    - name: CHAIN
      value: baobab  
    - name: LOG_LEVEL
      value: debug  
    - name: NODE_ENV
      value: production
    - name: ORAKL_NETWORK_API_URL
      value: http://orakl-api.orakl.svc.cluster.local:3030/api/v1
    - name: ORAKL_NETWORK_DELEGATOR_URL
      value: http://orakl-delegator.orakl.svc.cluster.local:5050/api/v1
    - name: REDIS_HOST
      value: redis-data-feed-master.redis.svc.cluster.local
    - name: REDIS_PORT
      value: "6379"
    - name: PROVIDER_URL
      value: http://172.0.100.240:8551

  gcpAutopilot:
    enabled: false

  affinity:
    enabled: false
    key: kubernetes.io/hostname
    value:

  podAnnotations: {}

  livenessProbe:
    enabled: true
    path: /
    initialDelaySeconds: 20
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5

  readinessProbe:
    enabled: true
    path: /
    initialDelaySeconds: 20
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5

listener:
  enabled: true
  replicas: 1
  serviceAccount:
    create: true
    name: orakl-aggregator-listener
    annotations: {}
    automountServiceAccountToken: true

  APP_PORT: 4000
  podSecurityContext: {}
  containerSecurityContext: {}

  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 1000m
      memory: 2Gi

worker:
  enabled: true
  replicas: 1
  serviceAccount:
    create: true
    name: orakl-aggregator-worker
    annotations: {}
    automountServiceAccountToken: true

  APP_PORT: 5000
  podSecurityContext: {}
  containerSecurityContext: {}

  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 1000m
      memory: 2Gi

reporter:
  enabled: true
  replicas: 1
  serviceAccount:
    create: true
    name: orakl-aggregator-reporter
    annotations: {}
    automountServiceAccountToken: true

  APP_PORT: 6000
  podSecurityContext: {}
  containerSecurityContext: {}

  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 1Gi

nodeSelector: {}
tolerations: []
dotenv: {}
