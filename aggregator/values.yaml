## Klaytn Orakl Listener Configuration
## created by Bisonai

global:
  image:
    repository: docker.io/jolol/orakl
    pullPolicy: IfNotPresent
    tag: "v.0.0.8"
    imagePullPolicy: IfNotPresent
    # -- If defined, uses a Secret to pull an image from a private Docker registry or repository
    imagePullSecrets: []

  config:
    NODE_ENV: production
    CHAIN: baobab
    HEALTH_CHECK_PORT: 8888
    ORAKL_DIR: /app/db
    REDIS_HOST: 
    REDIS_PORT: 6379
    SLACK_WEBHOOK_URL: 
    LOG_LEVEL: debug
    LOG_DIR: /app/log

  volumes:
    - name: orakl-database-storage
      persistentVolumeClaim:
        claimName: orakl-database
    - name: orakl-log-storage
      persistentVolumeClaim:
        claimName: orakl-log

  volumeMounts:
    - name: orakl-database-storage
      mountPath: /app/db      
      subPath: db
    - name: orakl-log-storage
      mountPath: /app/log

  affinity:
    enabled: true
    key: kubernetes.io/hostname
    value: ip-10-0-90-13.ap-southeast-1.compute.internal

  podAnnotations: {}

  livenessProbe:
    enabled: true
    path: /
    initialDelaySeconds: 20
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5

  readinessProbe:
    enabled: true
    path: /
    initialDelaySeconds: 20
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5 

listener:
  enabled: true
  replicas: 1
  serviceAccount:
    # -- Create a service account for the application controller
    create: true
    # -- Service account name
    name: orakl-aggregator-listener
    # -- Annotations applied to created service account
    annotations: {}
    # -- Automount API credentials for the Service Account
    automountServiceAccountToken: true

  podSecurityContext: {}

  containerSecurityContext: {}
    
  # resources:
  #   limits:
  #     cpu: 400m
  #     memory: 2Gi
  #   requests:
  #     cpu: 400m
  #     memory: 2Gi

worker:
  enabled: true
  replicas: 1
  serviceAccount:
    # -- Create a service account for the application controller
    create: true
    # -- Service account name
    name: orakl-aggregator-worker
    # -- Annotations applied to created service account
    annotations: {}
    # -- Automount API credentials for the Service Account
    automountServiceAccountToken: true

  podSecurityContext: {}

  containerSecurityContext: {}
    
  # resources:
  #   limits:
  #     cpu: 1000m
  #     memory: 4Gi
  #   requests:
  #     cpu: 1000m
  #     memory: 4Gi

reporter:
  enabled: true
  replicas: 1
  serviceAccount:
    # -- Create a service account for the application controller
    create: true
    # -- Service account name
    name: orakl-aggregator-reporter
    # -- Annotations applied to created service account
    annotations: {}
    # -- Automount API credentials for the Service Account
    automountServiceAccountToken: true

  podSecurityContext: {}

  containerSecurityContext: {}
    
  # resources:
  #   limits:
  #     cpu: 400m
  #     memory: 2Gi
  #   requests:
  #     cpu: 400m
  #     memory: 2Gi

nodeSelector: {}
tolerations: []
dotenv: {}
