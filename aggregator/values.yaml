## Klaytn Orakl Listener Configuration
## created by Bisonai

global:
  name: aggregator
  namespace: orakl
  appName: orakl-aggregator
  image:
    repository: public.ecr.aws/u6t6w0e4/orakl-core #repository url
    pullPolicy: IfNotPresent
    listenerTag: "v0.5.1.20240403.0423.f813b61"
    reporterTag: "v0.5.1.20240403.0423.f813b61"
    workerTag: "v0.5.1.20240403.0423.f813b61"
    imagePullPolicy: IfNotPresent
    # -- If defined, uses a Secret to pull an image from a private Docker registry or repository
    imagePullSecrets: []
    tag: v0.5.1.20240425.0502.5b643c7
  secretManager:
    enabled: false
    secretId:
    versionId:
  affinity:
    enabled: false
    key: kubernetes.io/hostname
    value:
  podAnnotations: {}
  livenessProbe:
    enabled: true
    path: /
    initialDelaySeconds: 20
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  readinessProbe:
    enabled: true
    path: /
    initialDelaySeconds: 20
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5
listener:
  enabled: true
  replicas: 1
  serviceAccount:
    # -- Create a service account for the application controller
    create: true
    # -- Service account name
    name: orakl-aggregator-listener
    # -- Annotations applied to created service account
    annotations: {}
    # -- Automount API credentials for the Service Account
    automountServiceAccountToken: true
  APP_PORT: 4000
  podSecurityContext: {}
  containerSecurityContext: {}
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 1000m
      memory: 2Gi
worker:
  enabled: true
  replicas: 1
  serviceAccount:
    # -- Create a service account for the application controller
    create: true
    # -- Service account name
    name: orakl-aggregator-worker
    # -- Annotations applied to created service account
    annotations: {}
    # -- Automount API credentials for the Service Account
    automountServiceAccountToken: true
  APP_PORT: 5000
  podSecurityContext: {}
  containerSecurityContext: {}
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 1000m
      memory: 2Gi
reporter:
  enabled: true
  replicas: 1
  serviceAccount:
    # -- Create a service account for the application controller
    create: true
    # -- Service account name
    name: orakl-aggregator-reporter
    # -- Annotations applied to created service account
    annotations: {}
    # -- Automount API credentials for the Service Account
    automountServiceAccountToken: true
  APP_PORT: 6000
  podSecurityContext: {}
  containerSecurityContext: {}
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 1Gi
nodeSelector: {}
tolerations: []
dotenv: {}
