apiVersion: apps/v1
kind: Deployment
metadata:
  name: aggregator-reporter
  labels:
    {{- include "orakl-aggregator.labels.reporter" . | nindent 4 }}
spec:
  replicas: {{ .Values.reporter.replicas }}
  selector:
    matchLabels:
      {{- include "orakl-aggregator.selectorLabels.reporter" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.global.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "orakl-aggregator.selectorLabels.reporter" . | nindent 8 }}
    spec:
      {{- with .Values.global.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.reporter.serviceAccount.name }}
      securityContext:
        {{- toYaml .Values.reporter.podSecurityContext | nindent 8 }}
      volumes:
      {{ if .Values.global.hostPath.enable }}
        {{- toYaml .Values.global.hostPath.volumes | default "" | nindent 8 }}
      {{ else }}
        {{- toYaml .Values.global.volumes | default "" | nindent 8 }}
      {{ end }}
      {{- if .Values.global.affinity.enabled }}         
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: {{ .Values.global.affinity.key }}
                operator: In
                values:
                - {{ .Values.global.affinity.value }}
      {{- end }}  
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.reporter.containerSecurityContext | nindent 12 }}
          image: "{{ .Values.global.image.repository }}:{{ .Values.global.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          volumeMounts:
            {{- toYaml .Values.global.volumeMounts | default "" | nindent 12 }}
          env:
            - name: NODE_ENV          
            {{- if .Values.global.config.NODE_ENV }}
              value: {{ .Values.global.config.NODE_ENV }}
            {{ else }}
              valueFrom:
                secretKeyRef:
                  name: orakl-core-secrets
                  key: NODE_ENV
            {{ end }}
            - name: ORAKL_NETWORK_API_URL          
            {{- if .Values.global.config.ORAKL_NETWORK_API_URL }}
              value: {{ .Values.global.config.ORAKL_NETWORK_API_URL }}
            {{ else }}
              valueFrom:
                secretKeyRef:
                  name: orakl-core-secrets
                  key: ORAKL_NETWORK_API_URL
            {{ end }}
            - name: CHAIN          
            {{- if .Values.global.config.CHAIN }}
              value: {{ .Values.global.config.CHAIN }}
            {{ else }}
              valueFrom:
                secretKeyRef:
                  name: orakl-core-secrets
                  key: CHAIN
            {{ end }}            
            - name: HEALTH_CHECK_PORT          
            {{- if .Values.global.config.HEALTH_CHECK_PORT }}
              value: {{ .Values.global.config.HEALTH_CHECK_PORT }}
            {{ else }}
              valueFrom:
                secretKeyRef:
                  name: orakl-core-secrets
                  key: HEALTH_CHECK_PORT
            {{ end }}    
            - name: SLACK_WEBHOOK_URL          
            {{- if .Values.global.config.SLACK_WEBHOOK_URL }}
              value: {{ .Values.global.config.SLACK_WEBHOOK_URL }}
            {{ else }}
              valueFrom:
                secretKeyRef:
                  name: orakl-core-secrets
                  key: SLACK_WEBHOOK_URL
            {{ end }}           
            - name: LOG_LEVEL          
            {{- if .Values.global.config.LOG_LEVEL }}
              value: {{ .Values.global.config.LOG_LEVEL }}
            {{ else }}
              valueFrom:
                secretKeyRef:
                  name: orakl-core-secrets
                  key: LOG_LEVEL
            {{ end }}              
            - name: LOG_DIR          
            {{- if .Values.global.config.LOG_DIR }}
              value: {{ .Values.global.config.LOG_DIR }}
            {{ else }}
              valueFrom:
                secretKeyRef:
                  name: orakl-core-secrets
                  key: LOG_DIR
            {{ end }}        
            - name: REDIS_HOST          
            {{- if .Values.global.config.REDIS_HOST }}
              value: {{ .Values.global.config.REDIS_HOST }}
            {{ else }}
              valueFrom:
                secretKeyRef:
                  name: orakl-core-secrets
                  key: REDIS_HOST
            {{ end }}                     
            - name: REDIS_PORT          
            {{- if .Values.global.config.REDIS_PORT }}
              value: {{ .Values.global.config.REDIS_PORT }}
            {{ else }}
              valueFrom:
                secretKeyRef:
                  name: orakl-core-secrets
                  key: REDIS_PORT
            {{ end }}   
            - name: PUBLIC_KEY          
            {{- if .Values.global.config.PUBLIC_KEY }}
              value: {{ .Values.global.config.PUBLIC_KEY }}
            {{ else }}
              valueFrom:
                secretKeyRef:
                  name: orakl-core-secrets
                  key: PUBLIC_KEY
            {{ end }}                     
            - name: PRIVATE_KEY          
            {{- if .Values.global.config.PRIVATE_KEY }}
              value: {{ .Values.global.config.PRIVATE_KEY }}
            {{ else }}
              valueFrom:
                secretKeyRef:
                  name: orakl-core-secrets
                  key: PRIVATE_KEY
            {{ end }}           
            - name: PROVIDER_URL          
            {{- if .Values.global.config.PROVIDER_URL }}
              value: {{ .Values.global.config.PROVIDER_URL }}
            {{ else }}
              valueFrom:
                secretKeyRef:
                  name: orakl-core-secrets
                  key: PROVIDER_URL
            {{ end }}                    
          command: ["yarn"]
          args: [start:reporter:aggregator]
          {{- if .Values.global.livenessProbe.enabled }}
          livenessProbe:
            exec:
              command:
              - ls
            initialDelaySeconds: {{ .Values.global.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.global.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.global.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.global.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.global.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.global.readinessProbe.enabled }}
          readinessProbe:
            exec:
              command:
              - ls
            initialDelaySeconds: {{ .Values.global.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.global.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.global.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.global.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.global.readinessProbe.failureThreshold }}              
          {{- end }}          
          resources:
            {{- toYaml .Values.reporter.resources | nindent 12 }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
