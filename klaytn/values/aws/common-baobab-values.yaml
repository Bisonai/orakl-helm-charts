cloud: aws
nameOverride: ""
fullnameOverride: ""

replicaCount: 1

initContainer:

imagePullSecrets: []
image:
  repository: klaytn/klaytn
  pullPolicy: Always
  tag: latest

node:
  initData: true
  # chainDataUrl: https://s3.ap-northeast-2.amazonaws.com/klaytn-chaindata/baobab/klaytn-baobab-chaindata-20221202011211.tar.gz
  # chainDataUrl: https://s3.ap-northeast-2.amazonaws.com/klaytn-chaindata/cypress/klaytn-cypress-chaindata-20221201011211.tar.gz
  
  type: en
  network: baobab   
  port: 32323
  syncMode: "full"
  verbosity: 3
  # maxconnections: 10
  metrics: true
  prometheus: true
  dbNoParallelWrite: false
  multichannel: true
  noDiscovery: false
  bootnodes: ""
  dataDir: /klaytn

  server:
    type: "fasthttp"

  txpool:
    execSlotsAll: 4096
    execSlotsAccount: 4096
    nonexecSlotsAll: 4096
    nonexecSlotsAccount: 4096
    lifeTime: 30m

  rpc:
    enable: true
    port: 8551
    # admin, debug, klay, miner, net, personal, rpc, txpool, web3
    api: [klay,eth,net,web3]
    addr: 0.0.0.0
    cors: ["*"]
    vhosts: ["*"]

  ws:
    enable: false
    port: 8552
    # admin, debug, klay, miner, net, personal, rpc, txpool, web3
    api: [klay,eth,net,web3]
    addr: 0.0.0.0
    origins: []

  additional: [
    --sendertxhashindexing,
    --txpool.deny.remotetx,
    --state.tries-in-memory 50,
    --state.trie-cache-limit 10240,
    --rpc.concurrencylimit 8000,
    --api.filter.getLogs.deadline 300ms,
  ]

enableServiceLinks: false

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  annotations:
    beta.cloud.google.com/backend-config: '{"ports": {"8551":"ken-baobab-klaytn","61001":"ken-baobab-klaytn"}}'
    cloud.google.com/neg: '{"ingress": true}'
  type: ClusterIP

ingress:
  enabled: false
  ingressClassName: alb
  annotations:
    alb.ingress.kubernetes.io/load-balancer-name: "klaytn-node-api-lb"
    alb.ingress.kubernetes.io/group.name: "klaytn-node-api-lb"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/actions.response-404: >
      {"type":"fixed-response","fixedResponseConfig":{"contentType":"text/plain","statusCode":"404","messageBody":"404 error text"}}
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=30,load_balancing.algorithm.type=least_outstanding_requests,stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=10

    # alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:ap-northeast-2:169021816258:certificate/afd5bdff-8b9a-4b13-aabf-4555967ae62c"
    # alb.ingress.kubernetes.io/subnets: "subnet-0ba9ecd5879f0c411, subnet-04424f89e24961a6d, subnet-08fbb2ef6ea73ca80"
  host: ""
  tls: []

command: 
  - /bin/sh
  - -c
  - |
    kend start
    sleep infinity

resources: 
  requests: 
    cpu: 500m
    memory: 4Gi

# baobab: https://packages.klaytn.net/baobab/chaindata/ (163.0GB / 296.9GB uncompressed)
# cypress: https://packages.klaytn.net/cypress/chaindata/ (756.0GB / 2.2TB uncompressed)
persistence:
  size: "500Gi"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}
  # eks.amazonaws.com/nodegroup: krosslab_cluster_dev-service-node-group

affinity: {}

topologySpreadConstraints:
- maxSkew: 1
  topologyKey: topology.kubernetes.io/zone
  whenUnsatisfiable: DoNotSchedule
  labelSelector:
    matchLabels:
      app.kubernetes.io/component: ken

tolerations:
- key: type
  value: klaytn
  effect: NoSchedule
