---
# Source: klaytn/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: klaytn
  labels:
    helm.sh/chart: klaytn-0.1.0
    app.kubernetes.io/name: klaytn
    app.kubernetes.io/instance: klaytn
    app.kubernetes.io/version: "1.9.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: klaytn/templates/node-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: klaytn-node-config
  labels:
    helm.sh/chart: klaytn-0.1.0
    app.kubernetes.io/name: klaytn
    app.kubernetes.io/instance: klaytn
    app.kubernetes.io/version: "1.9.1"
    app.kubernetes.io/managed-by: Helm
data:
  kend.conf: |-
    NETWORK="cypress"
    ADDITIONAL="--sendertxhashindexing \ --txpool.deny.remotetx \ --state.tries-in-memory 50 \ --state.trie-cache-limit 10240 \ --rpc.concurrencylimit 8000 \ --api.filter.getLogs.deadline 300ms"
    BOOTNODES=""
    DATA_DIR="/klaytn"
    LOG_DIR="${DATA_DIRR}/log"
    DB_NO_PARALLEL_WRITE=0
    METRICS=1
    MULTICHANNEL=1
    NETWORK="cypress"
    NO_DISCOVERY=0
    PORT=32323
    SUBPORT=$((PORT + 1))
    PROMETHEUS=1
    RPC_ADDR="0.0.0.0"
    RPC_API="klay,eth,net,web3"
    RPC_CORS="*"
    RPC_ENABLE=1
    RPC_PORT=8551
    RPC_VHOSTS="*"
    SERVER_TYPE="fasthttp"
    SYNC_MODE="full"
    TXPOOL_EXEC_SLOTS_ACCOUNT=4096
    TXPOOL_EXEC_SLOTS_ALL=4096
    TXPOOL_LIFE_TIME="30m"
    TXPOOL_NONEXEC_SLOTS_ACCOUNT=4096
    TXPOOL_NONEXEC_SLOTS_ALL=4096
    VERBOSITY=3
    WS_ADDR="0.0.0.0"
    WS_API="klay,eth,net,web3"
    WS_ENABLE=0
    WS_ORIGINS=""
    WS_PORT=8552
---
# Source: klaytn/templates/scripts-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: klaytn-scripts
  labels:
    helm.sh/chart: klaytn-0.1.0
    app.kubernetes.io/name: klaytn
    app.kubernetes.io/instance: klaytn
    app.kubernetes.io/version: "1.9.1"
    app.kubernetes.io/managed-by: Helm
data:
  init_script.sh: |-
    LOG_DIR=$(cat /etc/k*nd/conf/k*nd.conf | grep LOG_DIR | cut -d '=' -f 2)
    cat <<EOF > /etc/logrotate.d/klaytn
    $LOG_DIR/*.out {
        daily
        copytruncate
        compress
        rotate 7
        dateext
        create 0644 root root
    }
    EOF

    DATE=$(date  --date="yesterday" +"%Y%m%d")
    NETWORK=cypress
    S3_URL=https://s3.ap-northeast-2.amazonaws.com/klaytn-chaindata/${NETWORK}/klaytn-${NETWORK}-chaindata-${DATE}011212.tar.gz

    mkdir -p /klaytn
    
    if [ -d "/klaytn/klay" ]; then
      echo "done"
    else
      cd /klaytn
      wget ${S3_URL} -O - | tar -xzvf -
      echo "done"
    fi
---
# Source: klaytn/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: klaytn
  labels:
    helm.sh/chart: klaytn-0.1.0
    app.kubernetes.io/name: klaytn
    app.kubernetes.io/instance: klaytn
    app.kubernetes.io/version: "1.9.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: rpc
      port: 8551
      targetPort: 8551
      protocol: TCP
  selector:
    app.kubernetes.io/name: klaytn
    app.kubernetes.io/instance: klaytn
---
# Source: klaytn/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: klaytn 
  labels:
    helm.sh/chart: klaytn-0.1.0
    app.kubernetes.io/name: klaytn
    app.kubernetes.io/instance: klaytn
    app.kubernetes.io/version: "1.9.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ken
spec:
  replicas: 1
  serviceName: klaytn
  selector:
    matchLabels:
      app.kubernetes.io/name: klaytn
      app.kubernetes.io/instance: klaytn
  template:
    metadata:
      labels:
        app.kubernetes.io/name: klaytn
        app.kubernetes.io/instance: klaytn
    spec:
      enableServiceLinks: false
      serviceAccountName: klaytn
      securityContext:
        {}
      initContainers:
        - name: init-chain-data
          image: busybox:1.28
          command: 
            - /bin/sh
            - -c
            - /tmp/init_script.sh
          volumeMounts:
            - name: data
              mountPath: /klaytn
            - name: scripts
              mountPath: /tmp/
      containers:
        - name: klaytn
          securityContext:
            {}
          image: "klaytn/klaytn:latest"
          imagePullPolicy: Always
          env: []
          command:
            - /bin/sh
            - -c
            - sleep infinity
          ports:
            - name: ken
              containerPort: 32323
              protocol: TCP
            - name: rpc
              containerPort: 8551
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 8551
          readinessProbe:
            httpGet:
              path: /
              port: 8551
          volumeMounts:
            - name: data
              mountPath: /klaytn
            - name: config
              mountPath: /klaytn-docker-pkg/conf/
          resources:
            limits:
              cpu: 8000m
              memory: 32Gi
            requests:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: config
          configMap:
            name: klaytn-node-config
        - name: scripts
          configMap:
            name: klaytn-scripts
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: ken
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "3Ti"
---
# Source: klaytn/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: klaytn
  labels:
    helm.sh/chart: klaytn-0.1.0
    app.kubernetes.io/name: klaytn
    app.kubernetes.io/instance: klaytn
    app.kubernetes.io/version: "1.9.1"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - http:
        paths:
          - pathType: ImplementationSpecific
            path: /v1/cypress/*
            backend:
              service:
                name: rpc
                port:
                  number: 8551
      host: ""
---
# Source: klaytn/templates/backendconfig.yaml
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: http
spec:
  timeoutSec: 40
  connectionDraining:
    drainingTimeoutSec: 60
