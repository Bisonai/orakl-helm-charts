apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.global.name }} 
  labels:
    app: {{ .Values.global.name }}
    app.kubernetes.io/name: {{ .Values.global.name }}
    app.kubernetes.io/instance: {{ .Values.global.name }}
spec:
  replicas: {{ .Values.monitorApi.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.global.name }}
      app.kubernetes.io/name: {{ .Values.global.name }}
      app.kubernetes.io/instance: {{ .Values.global.name }}
  template:
    metadata:
      {{- with .Values.app.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ .Values.global.name }}
        app.kubernetes.io/name: {{ .Values.global.name }}
        app.kubernetes.io/instance: {{ .Values.global.name }}
    spec:
      {{- with .Values.global.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.monitorApi.podSecurityContext | nindent 8 }}
      {{- if .Values.global.affinity.enabled }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: {{ .Values.global.affinity.key }}
                operator: In
                values:
                - {{ .Values.global.affinity.value }}
      {{- end }}
      containers:
        - name: {{ .Values.global.name }}
          securityContext:
            {{- toYaml .Values.app.containerSecurityContext | nindent 12 }}
          image: "{{ .Values.global.image.repository }}:{{ .Values.global.image.tag | default v0.0.1.20240522.0552.7b4f67b }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          command: ["/bin/sh","-c"]
          args: {{ .Values.app.args | nindent 12 }}
          env: {{- toYaml .Values.api.env | nindent 12 }}
          ports:
          - name: http
            containerPort: {{ .Values.app.port }}
          {{- if .Values.global.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.global.livenessProbe.path }}
              port: {{ .Values.global.livenessProbe.port }}
            initialDelaySeconds: {{ .Values.global.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.global.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.global.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.global.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.global.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.global.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.global.readinessProbe.path }}
              port: {{ .Values.global.readinessProbe.port }}
            initialDelaySeconds: {{ .Values.global.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.global.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.global.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.global.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.global.readinessProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.app.resources | nindent 12 }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
