## Klaytn Orakl Listener Configuration
## created by Bisonai
global:
  image:
    repository: public.ecr.aws/bisonai/orakl-general  #repository url
    pullPolicy: IfNotPresent
    tag: "monitor.v.20230627.0256.7a9206d"  
    imagePullPolicy: IfNotPresent
    # -- If defined, uses a Secret to pull an image from a private Docker registry or repository
    imagePullSecrets: []

  config:
    PROVIDER:
    MONITOR_POSTGRES_USER:
    MONITOR_POSTGRES_PASSWORD:
    MONITOR_POSTGRES_HOST:
    MONITOR_POSTGRES_PORT:
    MONITOR_POSTGRES_DATABASE:

    ORAKL_POSTGRES_USER:
    ORAKL_POSTGRES_PASSWORD:
    ORAKL_POSTGRES_HOST:
    ORAKL_POSTGRES_PORT:
    ORAKL_POSTGRES_DATABASE:

    GRAPH_NODE_POSTGRES_USER:
    GRAPH_NODE_POSTGRES_PASSWORD:
    GRAPH_NODE_POSTGRES_HOST:
    GRAPH_NODE_POSTGRES_PORT:
    GRAPH_NODE_POSTGRES_DATABASE:


    VRF_REDIS_HOST: "redis-vrf-master.redis.svc.cluster.local"
    VRF_REDIS_PORT: "6379"

    REQUEST_RESPONSE_REDIS_HOST: "redis-request-response-master.redis.svc.cluster.local"
    REQUEST_RESPONSE_REDIS_PORT: "6379"

    AGGREGATOR_REDIS_HOST: "redis-aggregator-master.redis.svc.cluster.local"
    AGGREGATOR_REDIS_PORT: "6379"

    JWT_SECRET: ""
    PASSWORD: ""


  affinity:
    enabled: false
    key: kubernetes.io/hostname
    value: ip-10-0-90-13.ap-southeast-1.compute.internal

  podAnnotations: {}

  livenessProbe:
    enabled: true
    path: /health
    port: 8888
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5

  readinessProbe:
    enabled: true
    path: /health
    port: 8888
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5 

monitorApi:
  enabled: true
  replicas: 1
  serviceAccount:
    # -- Create a service account for the application controller
    create: true
    # -- Service account name
    name: orakl-monitor-api
    # -- Annotations applied to created service account
    annotations: {}
    # -- Automount API credentials for the Service Account
    automountServiceAccountToken: true

  podSecurityContext: {}

  containerSecurityContext: {}
  
  resources:
    # limits:
    #   cpu: 1500m
    #   memory: 6Gi
    # requests:
    #   cpu: 1500m
    #   memory: 6Gi

nodeSelector: {}
tolerations: []
dotenv: {}
