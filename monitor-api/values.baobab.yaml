## Klaytn Orakl Listener Configuration
## created by Bisonai
global:
  name: orakl-monitor-api
  namespace: orakl-baobab

  image:
    repository: public.ecr.aws/bisonai/orakl-general #repository url
    pullPolicy: IfNotPresent
    tag: "monitor.v.20230905.0521.48fdf0a"
    imagePullPolicy: IfNotPresent
    # -- If defined, uses a Secret to pull an image from a private Docker registry or repository
    imagePullSecrets: []

  affinity:
    enabled: false
    key: kubernetes.io/hostname
    value: ip-10-0-90-13.ap-southeast-1.compute.internal

  podAnnotations: {}

  livenessProbe:
    enabled: true
    path: /health
    port: 8888
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5

  readinessProbe:
    enabled: true
    path: /health
    port: 8888
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5

monitorApi:
  enabled: true
  replicas: 1
  annotations: 
    vault.hashicorp.com/agent-inject: 'true'
    vault.hashicorp.com/role: 'monitor'
    vault.hashicorp.com/agent-inject-template-config: |
      {{ with secret "monitor/data/baobab" -}}
        #!/bin/bash
        export DATABASE_URL="{{ .Data.data.DATABASE_URL }}"
        export GRAPH_NODE_POSTGRES_DATABASE="{{ .Data.data.GRAPH_NODE_POSTGRES_DATABASE }}"
        export GRAPH_NODE_POSTGRES_HOST="{{ .Data.data.GRAPH_NODE_POSTGRES_HOST }}"
        export GRAPH_NODE_POSTGRES_PASSWORD="{{ .Data.data.GRAPH_NODE_POSTGRES_PASSWORD }}"
        export GRAPH_NODE_POSTGRES_PORT="{{ .Data.data.GRAPH_NODE_POSTGRES_PORT }}"
        export GRAPH_NODE_POSTGRES_USER="{{ .Data.data.GRAPH_NODE_POSTGRES_USER }}"
        export JWT_SECRET="{{ .Data.data.JWT_SECRET }}"
        export MESSENGER_ENDPOINT="{{ .Data.data.MESSENGER_ENDPOINT }}"
        export MONITOR_POSTGRES_DATABASE="{{ .Data.data.MONITOR_POSTGRES_DATABASE }}"
        export MONITOR_POSTGRES_HOST="{{ .Data.data.MONITOR_POSTGRES_HOST }}"
        export MONITOR_POSTGRES_PASSWORD="{{ .Data.data.MONITOR_POSTGRES_PASSWORD }}"
        export MONITOR_POSTGRES_PORT="{{ .Data.data.MONITOR_POSTGRES_PORT }}"
        export MONITOR_POSTGRES_USER="{{ .Data.data.MONITOR_POSTGRES_USER }}"
        export ORAKL_POSTGRES_DATABASE="{{ .Data.data.ORAKL_POSTGRES_DATABASE }}"
        export ORAKL_POSTGRES_HOST="{{ .Data.data.ORAKL_POSTGRES_HOST }}"
        export ORAKL_POSTGRES_PASSWORD="{{ .Data.data.ORAKL_POSTGRES_PASSWORD }}"
        export ORAKL_POSTGRES_PORT="{{ .Data.data.ORAKL_POSTGRES_PORT }}"
        export ORAKL_POSTGRES_USER="{{ .Data.data.ORAKL_POSTGRES_USER }}"
      {{- end }}    

  podSecurityContext: {}

  containerSecurityContext: {}

  env:
    - name: VAULT_ADDR
      value: http://vault.vault.svc.cluster.local:8200/
    - name: JWT_PATH
      value: /var/run/secrets/kubernetes.io/serviceaccount/token
    - name: VAULT_ROLE
      value: monitor
    - name: AGGREGATOR_REDIS_HOST
      value: baobab.redis.data-feed.orakl.local
    - name: AGGREGATOR_REDIS_PORT
      value: "80"
    - name: REQUEST_RESPONSE_REDIS_HOST
      value: baobab.redis.request-response.orakl.local
    - name: REQUEST_RESPONSE_REDIS_PORT
      value: "80"
    - name: VRF_REDIS_HOST
      value: baobab.redis.vrf.orakl.local
    - name: VRF_REDIS_PORT
      value: "80"
    - name: NODE_ENV
      value: BAOBAB
    - name: PASSWORD
      value: bisonaicomingsoon
    - name: PROVIDER
      value: http://172.0.100.240:8551
  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 2000m
      memory: 4Gi

nodeSelector: {}
tolerations: []
dotenv: {}
